AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a Lambda function with S3 and Parameter Store permissions

Resources:
  # Create IAM Role for Lambda
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties: 
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement: 
          - Effect: 'Allow'
            Principal: 
              Service: 
                - 'lambda.amazonaws.com'
            Action: 
              - 'sts:AssumeRole'
      Policies: 
        - PolicyName: 'LambdaS3ParameterStorePolicy'
          PolicyDocument: 
            Version: '2012-10-17'
            Statement: 
              - Effect: 'Allow'
                Action: 
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:ListBucket'
                Resource: 
                  - 'arn:aws:s3:::975050064431-bucket-dev/*'
                  - 'arn:aws:s3:::975050064431-bucket-dev'
              - Effect: 'Allow'
                Action: 
                  - 'ssm:GetParameter'
                  - 'ssm:GetParameters'
                  - 'ssm:GetParametersByPath'
                Resource: 
                  - 'arn:aws:ssm:us-east-1:975050064431:parameter/your-parameter-path/*'

  # Create Lambda Function
  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties: 
      Handler: 'lambda_function.lambda_handler'
      Role: 
        Fn::GetAtt: 
          - 'LambdaExecutionRole'
          - 'Arn'
      Code: 
        S3Bucket: '975050064431-bucket-dev'
        S3Key: 'lambda.zip'
      Runtime: 'python3.8'
      Environment:
        Variables:
          PARAMETER_NAME: '/env/dev'

Outputs:
  LambdaFunctionArn:
    Description: 'ARN of the Lambda Function'
    Value: !GetAtt 
      - MyLambdaFunction
      - Arn
